{
    "openapi": "3.0.1",
    "info": {
        "title": "Places API",
        "description": "De Places API is verantwoordelijk voor het verschaffen van gegevens over places en locatie data hiervan. Een place is een abstractie van een locatiegebonden stuk informatie, zoalsadressen, poi's, haltes, stationswinkels, ov-fietsen, greenwheels autos, parkeerplaatsen, steden etc.",
        "contact": {
            "name": "M-Lab",
            "email": "mlab@ns.nl"
        },
        "version": "1.0"
    },
    "servers": [
        {
            "url": "https://gateway.apiportal.ns.nl/places-api"
        }
    ],
    "paths": {
        "/v2/ovfiets": {
            "get": {
                "tags": [
                    "OV-fiets"
                ],
                "summary": "OV-fiets availability",
                "description": "Retrieve a list of OV-fiets places and availability. Use the query parameters to limit the number of places",
                "operationId": "beschikbaarheid",
                "parameters": [
                    {
                        "name": "station_code",
                        "in": "query",
                        "description": "Returns results which are linked to a Station based on the station code",
                        "schema": {
                            "type": "string"
                        },
                        "example": "ut"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of available OV-fiets places; Representation contains payload of type List<Place>",
                        "content": {
                            "application/json;version=2": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepresentationListPlace"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "List of available OV-fiets places; Representation contains payload of type List<Place>",
                        "content": {
                            "application/json;version=2": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepresentationListPlace"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "List of available OV-fiets places; Representation contains payload of type List<Place>",
                        "content": {
                            "application/json;version=2": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepresentationListPlace"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/autosuggest/{type}/{id}": {
            "get": {
                "tags": [
                    "Autosuggest"
                ],
                "summary": "autoSuggestForType",
                "description": "Request a specific autosuggest resource. This endpoint is deprecated. Please use /api/v2/places",
                "operationId": "autoSuggestForType",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of place.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the place.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "x-api-key",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information about a specific place; Representation contains payload of type Location",
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepresentationLocation"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Information about a specific place; Representation contains payload of type Location",
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepresentationLocation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Information about a specific place; Representation contains payload of type Location",
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepresentationLocation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/autosuggest": {
            "get": {
                "tags": [
                    "Autosuggest"
                ],
                "summary": "autoSuggest",
                "description": "Performs an auto suggest based on the given types and q. The default types on which is searched are address and stops. This endpoint is deprecated. Please use /api/v2/places",
                "operationId": "autoSuggest",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "q, does a full text search",
                        "schema": {
                            "type": "string"
                        },
                        "example": "ut,kiosk,jrvs"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Multi valued array(comma separated list)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "example": "poi,station-taxi,stationfacility,greenwheels,qpark,address,city,stop"
                    },
                    {
                        "name": "type[]",
                        "in": "query",
                        "description": "Multi valued array for iOS, equivalent rot type",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "session_token",
                        "in": "query",
                        "description": "A session token, used to group the query and selection phases of a user autocomplete search into a discrete session for billing purposes",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "x-api-key",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of available places; Representation contains payload of type List<Place>",
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepresentationListPlace"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "List of available places; Representation contains payload of type List<Place>",
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepresentationListPlace"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "List of available places; Representation contains payload of type List<Place>",
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepresentationListPlace"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/places/{type}/resource/{resource}": {
            "get": {
                "tags": [
                    "Places"
                ],
                "summary": "Images",
                "description": "Returns an image of a place based on type and resource name",
                "operationId": "image",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of Place",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "poi,station-taxi,stationfacility,greenwheels,qpark,address,city,stop"
                    },
                    {
                        "name": "resource",
                        "in": "path",
                        "description": "Resource name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "img-2.0-fr-paris-portrait-2-square.jpg"
                    },
                    {
                        "name": "blur",
                        "in": "query",
                        "description": "Format - float. Blur the image",
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "default": 0
                        },
                        "example": 0.5
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Image of a place based on type and resource name; contains ByteArray",
                        "content": {
                            "image/*": {
                                "schema": {
                                    "type": "string",
                                    "format": "byte"
                                },
                                "examples": {
                                    "default": {
                                        "value": null
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No image found of type for id",
                        "content": {
                            "image/*": {
                                "schema": {
                                    "type": "string",
                                    "format": "byte"
                                },
                                "examples": {
                                    "default": {
                                        "value": null
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Image of a place based on type and resource name; contains ByteArray",
                        "content": {
                            "image/*": {
                                "schema": {
                                    "type": "string",
                                    "format": "byte"
                                },
                                "examples": {
                                    "default": {
                                        "value": null
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/places": {
            "get": {
                "tags": [
                    "Places"
                ],
                "summary": "List places",
                "description": "Use the query parameters to limit the number of places",
                "operationId": "places",
                "parameters": [
                    {
                        "name": "lat",
                        "in": "query",
                        "description": "latitude, to be used with parameter lng",
                        "schema": {
                            "type": "string"
                        },
                        "example": 52.089319
                    },
                    {
                        "name": "lng",
                        "in": "query",
                        "description": "longitude, to be used with parameter lat",
                        "schema": {
                            "type": "string"
                        },
                        "example": 5.110169
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Multi valued array",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "example": "poi,station-taxi,stationfacility,greenwheels,qpark,address,city,stop"
                    },
                    {
                        "name": "type[]",
                        "in": "query",
                        "description": "Multi valued array for iOS, equivalent to type",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Multi valued array, specify the order in which results are returned. If stations are requested, those always have priority",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "example": "poi,station-taxi,stationfacility,greenwheels,qpark,address,city,stop"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Format - int32. Limit the number of results returned",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 150
                        },
                        "example": 25
                    },
                    {
                        "name": "radius",
                        "in": "query",
                        "description": "Format - int32. Radius in meters, to be used in conjunction with lat and lng",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1000
                        },
                        "example": 2500
                    },
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "The language the response should be in",
                        "schema": {
                            "type": "string",
                            "default": "nl"
                        },
                        "example": "nl,en"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "q, does a full text search",
                        "schema": {
                            "type": "string"
                        },
                        "example": "ut,kiosk,jrvs"
                    },
                    {
                        "name": "screen-density",
                        "in": "query",
                        "description": "preferred screen density. Images are optimized for a screen resolution. Usually 1.0 is non-retina, 2.0 is double=retina",
                        "schema": {
                            "type": "string",
                            "default": "ios-2.0"
                        },
                        "example": "ios-1.0,ios-2.0,ios-3.0,mdpi,hdpi,xhdpi,xxhdpi,xxxhdpi"
                    },
                    {
                        "name": "details",
                        "in": "query",
                        "description": "Whether or not to include details in the result",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "station_code",
                        "in": "query",
                        "description": "Returns results which are linked to a Station based on the station code",
                        "schema": {
                            "type": "string"
                        },
                        "example": "UT,SHL,GVC"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Search by name does not use a fuzzy or full text search",
                        "schema": {
                            "type": "string"
                        },
                        "example": "City"
                    },
                    {
                        "name": "view",
                        "in": "query",
                        "description": "Search for a pre-defined types. E.g. ovfiets returns results with type=stationfacility, but only OV-fiets identifiers",
                        "schema": {
                            "type": "string"
                        },
                        "example": "stationinfo"
                    },
                    {
                        "name": "platforms",
                        "in": "query",
                        "description": "A comma seperated list. Limit the search to a specific platform. (e.g. some results include links to android apps which should not be shown on iOS)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "example": "ios,android"
                    },
                    {
                        "name": "identifier",
                        "in": "query",
                        "description": "Multi valued array with identifiers. Can be excluded by prefixing with minus (e.g. -ovfiets)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "default": "[ ]"
                        }
                    },
                    {
                        "name": "moment",
                        "in": "query",
                        "description": "Set a date and time which determines if Places and locations are Open or Closed at that moment. Format is in ISO8601 format, when omitted date and time is set to Today, NOW",
                        "schema": {
                            "type": "string"
                        },
                        "example": "2016-07-05T13:42:24.0000000+00:00"
                    },
                    {
                        "name": "countries",
                        "in": "query",
                        "description": "Comma separated list of country codes to filter stations.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-session-token",
                        "in": "header",
                        "description": "A session token, used to group the query and selection phases of a user autocomplete search into a discrete session for billing purposes",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of available places; Representation contains payload of type List<Place>",
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepresentationListPlace"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "limit should be bigger than 0 or moment could not be parsed, parameter is in ISO8601 format",
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepresentationListPlace"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "List of available places; Representation contains payload of type List<Place>",
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepresentationListPlace"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/places/{type}/{id}": {
            "get": {
                "tags": [
                    "Places"
                ],
                "summary": "Places for type",
                "description": "Return a place based on id and type",
                "operationId": "placesForType",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of Place",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "poi,station-taxi,stationfacility,greenwheels,qpark,address,city,stop"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the place object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "ChIJ2QUls2lrxkcRI4_mKWufkOM"
                    },
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "The language the response should be in",
                        "schema": {
                            "type": "string",
                            "default": "nl"
                        },
                        "example": "nl,en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of available places based on id and type; Representation contains payload of type Location",
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepresentationLocation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No place found of type for id",
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepresentationLocation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "List of available places based on id and type; Representation contains payload of type Location",
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepresentationLocation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/modality-details": {
            "get": {
                "tags": [
                    "modality-details"
                ],
                "summary": "getDetails",
                "operationId": "getDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Modality id url encoded",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "%23mcp%3AV%3Acheck%3A7413a8a8-6562-4f71-a06b-5960a086861f"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Modality type",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "DLS"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/SharedModality"
                                },
                                "example": {
                                    "id": "string",
                                    "description": "string",
                                    "providerName": "string",
                                    "providerImageUrl": "string",
                                    "providerLogoUrl": "string",
                                    "name": "string",
                                    "address": "string",
                                    "batteryInfo": {
                                        "text": "string",
                                        "level": "EMPTY",
                                        "iconId": "string",
                                        "iconColor": "string",
                                        "percentage": "string",
                                        "distanceLeftInKilometers": "string"
                                    },
                                    "priceDetails": [
                                        "string"
                                    ],
                                    "specifications": [
                                        {
                                            "description": "string",
                                            "icon": "string",
                                            "color": "string"
                                        }
                                    ],
                                    "button": {
                                        "buttonText": "string",
                                        "weblink": "string",
                                        "deeplink": "string",
                                        "deeplinkIOS": "string",
                                        "deeplinkAndroid": "string",
                                        "deeplinkWeb": "string",
                                        "variant": "string",
                                        "iconLeading": "string"
                                    },
                                    "storeUrls": {
                                        "googlePlayStoreUrl": "string",
                                        "appleStoreUrl": "string"
                                    },
                                    "bookingInfo": {
                                        "bookingContext": "string",
                                        "provider": "string",
                                        "modalityId": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/scooter-details": {
            "get": {
                "tags": [
                    "Scooter"
                ],
                "summary": "getScooterDetails",
                "operationId": "getScooterDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Scooter id url encoded",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "%23mcp%3AV%3Acheck%3A7413a8a8-6562-4f71-a06b-5960a086861f"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scooter"
                                },
                                "example": {
                                    "id": "string",
                                    "name": "string",
                                    "lat": 0,
                                    "lng": 0,
                                    "thumbnail": {
                                        "uri": "string"
                                    },
                                    "distance": 0,
                                    "address": "string",
                                    "batteryInfo": {
                                        "text": "string",
                                        "level": "EMPTY",
                                        "iconId": "string"
                                    },
                                    "button": {
                                        "weblink": {
                                            "uri": "string"
                                        },
                                        "deepLink": {
                                            "uri": "string"
                                        },
                                        "buttonText": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/nearbyme": {
            "get": {
                "tags": [
                    "NearbyMeV2"
                ],
                "summary": "locations",
                "operationId": "locations",
                "parameters": [
                    {
                        "name": "minLat",
                        "in": "query",
                        "description": "Format - double. Latitude of the south-west coordinate of the map. ",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "double"
                        },
                        "example": 52.089319
                    },
                    {
                        "name": "minLng",
                        "in": "query",
                        "description": "Format - double. Longitude of the south-west coordinate of the map.",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "double"
                        },
                        "example": 5.110169
                    },
                    {
                        "name": "maxLat",
                        "in": "query",
                        "description": "Format - double. Latitude of the north-east coordinate of the map. ",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "double"
                        },
                        "example": 52.089319
                    },
                    {
                        "name": "maxLng",
                        "in": "query",
                        "description": "Format - double. Longitude of the north-east coordinate of the map.",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "double"
                        },
                        "example": 5.110169
                    },
                    {
                        "name": "zoomLevel",
                        "in": "query",
                        "description": "Format - int32. Zoomlevel of the map for which data should be returned. See https://developers.google.com/maps/documentation/android-sdk/views#zoom",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 6
                        },
                        "example": 6
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Format - int32. Limit the number of results returned",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 200
                        },
                        "example": 50
                    },
                    {
                        "name": "filterTypes",
                        "in": "query",
                        "description": "NearbyMeLocationTypes that should be applied in the search. If present, will take precedence over filters.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "default": "[ ]"
                        },
                        "example": "STATION,BUS,SHARED_BIKE"
                    },
                    {
                        "name": "disabledModalities",
                        "in": "query",
                        "description": "DisabledModalities that could be applied in the search. If identical to filters <should not be possible>, both will be ignored and all types returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "default": "[ ]"
                        },
                        "example": "DLS, DEF"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "nl"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-MmVehicleExtra",
                        "in": "header",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/NearbyMeLocationResponse"
                                },
                                "example": {
                                    "locations": [
                                        {
                                            "id": {
                                                "value": "string",
                                                "type": "string"
                                            },
                                            "lat": 0,
                                            "lng": 0,
                                            "name": "string",
                                            "category": "STATION",
                                            "provider": "string",
                                            "type": "STATION",
                                            "distance": 0,
                                            "description": {
                                                "full": "string",
                                                "minimal": "string"
                                            },
                                            "routeShortNames": [
                                                "string"
                                            ],
                                            "platform": {
                                                "code": "string",
                                                "label": "string"
                                            }
                                        }
                                    ],
                                    "messages": [
                                        {
                                            "priority": 0,
                                            "value": "string",
                                            "type": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/nearbyme/filters": {
            "get": {
                "tags": [
                    "NearbyMe"
                ],
                "summary": "filters",
                "operationId": "filters",
                "parameters": [
                    {
                        "name": "disabledModalities",
                        "in": "query",
                        "description": "Enum like list of SharedModality ids that should be excluded from the results",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "default": "[ ]"
                        },
                        "example": "DLF,DLS,DLA,DEF"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-MmVehicleExtra",
                        "in": "header",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NearbyMeFilter"
                                    }
                                },
                                "example": [
                                    {
                                        "id": 0,
                                        "name": "string",
                                        "filterName": "string",
                                        "filterType": "string",
                                        "providers": [
                                            {
                                                "id": 0,
                                                "name": "string",
                                                "filterName": "string"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/v1/nearbyme/filter-ids": {
            "get": {
                "tags": [
                    "NearbyMe"
                ],
                "summary": "filterIds",
                "operationId": "filterIds",
                "parameters": [
                    {
                        "name": "descriptors",
                        "in": "query",
                        "description": "Comma separated list of strings describing the requested filters with enum like names.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "example": "SHARED_SCOOTER,SCOOTER,OV_FIETS,TRAM,BUS"
                    },
                    {
                        "name": "X-MmVehicleExtra",
                        "in": "header",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                },
                                "example": [
                                    0
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/v1/modality-details": {
            "get": {
                "tags": [
                    "modality-details"
                ],
                "summary": "getDetails_1",
                "operationId": "getDetails_1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Modality id url encoded",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "%23mcp%3AV%3Acheck%3A7413a8a8-6562-4f71-a06b-5960a086861f"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/SharedModalityV1"
                                },
                                "example": {
                                    "id": "string",
                                    "description": "string",
                                    "type": "STATION",
                                    "variation": "REGULAR",
                                    "provider": "CHECK",
                                    "providerName": "string",
                                    "providerImageUrl": "string",
                                    "providerLogoUrl": "string",
                                    "name": "string",
                                    "address": "string",
                                    "batteryInfo": {
                                        "text": "string",
                                        "level": "EMPTY",
                                        "iconId": "string",
                                        "iconColor": "string",
                                        "percentage": "string",
                                        "distanceLeftInKilometers": "string"
                                    },
                                    "priceDetails": [
                                        "string"
                                    ],
                                    "specifications": [
                                        {
                                            "description": "string",
                                            "icon": "string",
                                            "color": "string"
                                        }
                                    ],
                                    "button": {
                                        "buttonText": "string",
                                        "weblink": "string",
                                        "deeplink": "string",
                                        "deeplinkIOS": "string",
                                        "deeplinkAndroid": "string",
                                        "deeplinkWeb": "string",
                                        "variant": "string",
                                        "iconLeading": "string"
                                    },
                                    "storeUrls": {
                                        "googlePlayStoreUrl": "string",
                                        "appleStoreUrl": "string"
                                    },
                                    "bookingInfo": {
                                        "bookingContext": "string",
                                        "provider": "string",
                                        "modalityId": "string"
                                    },
                                    "bookingContext": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/nearbyme": {
            "get": {
                "tags": [
                    "NearbyMe"
                ],
                "summary": "locations_1",
                "operationId": "locations_1",
                "parameters": [
                    {
                        "name": "minLat",
                        "in": "query",
                        "description": "Format - double. Latitude of the south-west coordinate of the map. ",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "double"
                        },
                        "example": 52.089319
                    },
                    {
                        "name": "minLng",
                        "in": "query",
                        "description": "Format - double. Longitude of the south-west coordinate of the map.",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "double"
                        },
                        "example": 5.110169
                    },
                    {
                        "name": "maxLat",
                        "in": "query",
                        "description": "Format - double. Latitude of the north-east coordinate of the map. ",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "double"
                        },
                        "example": 52.089319
                    },
                    {
                        "name": "maxLng",
                        "in": "query",
                        "description": "Format - double. Longitude of the north-east coordinate of the map.",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "double"
                        },
                        "example": 5.110169
                    },
                    {
                        "name": "zoomLevel",
                        "in": "query",
                        "description": "Format - int32. Zoomlevel of the map for which data should be returned. See https://developers.google.com/maps/documentation/android-sdk/views#zoom",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 6
                        },
                        "example": 6
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Format - int32. Limit the number of results returned",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 200
                        },
                        "example": 50
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "The ids of the filters that should be applied in the search. The ids correspond with locationTypes like stations, bus stops, etc.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "default": "[ ]"
                        },
                        "example": 123
                    },
                    {
                        "name": "filterTypes",
                        "in": "query",
                        "description": "NearbyMeLocationTypes that should be applied in the search. If present, will take precedence over filters.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "default": "[ ]"
                        },
                        "example": "STATION,BUS,SHARED_BIKE"
                    },
                    {
                        "name": "disabledModalities",
                        "in": "query",
                        "description": "DisabledModalities that could be applied in the search. If identical to filters <should not be possible>, both will be ignored and all types returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "default": "[ ]"
                        },
                        "example": "DLS, DEF"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "nl"
                        }
                    },
                    {
                        "name": "X-MmVehicleExtra",
                        "in": "header",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NearbyMeLocationV1"
                                    }
                                },
                                "example": [
                                    {
                                        "id": {
                                            "value": "string",
                                            "type": "string"
                                        },
                                        "lat": 0,
                                        "lng": 0,
                                        "name": "string",
                                        "description": "string",
                                        "shortDescription": "string",
                                        "type": "STATION",
                                        "mixedType": "MIXED_BUS_TRAM",
                                        "distance": 0,
                                        "numAvailable": 0,
                                        "address": "string",
                                        "routeShortNames": [
                                            "string"
                                        ],
                                        "platform": {
                                            "code": "string",
                                            "label": "string"
                                        }
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/v2/places/nearest": {
            "get": {
                "tags": [
                    "Places"
                ],
                "summary": "Get nearest POI, address or stop",
                "description": "Return location nearest to requested coordinates",
                "operationId": "nearestLocation",
                "parameters": [
                    {
                        "name": "lat",
                        "in": "query",
                        "description": "Format - double. latitude, to be used with parameter lng",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        },
                        "example": 52.089319
                    },
                    {
                        "name": "lng",
                        "in": "query",
                        "description": "Format - double. longitude, to be used with parameter lat",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        },
                        "example": 5.110169
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Format - int32. Limit the number of results returned",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 150
                        },
                        "example": 25
                    },
                    {
                        "name": "radius",
                        "in": "query",
                        "description": "Format - int32. Radius in meters, to be used in conjunction with lat and lng",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1000
                        },
                        "example": 2500
                    },
                    {
                        "name": "X-session-token",
                        "in": "header",
                        "description": "A session token, used to group the query and selection phases of a user autocomplete search into a discrete session for billing purposes",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Nearest POI, address or stop to requested coordinates; Representation contains payload of type Location",
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepresentationLocation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No Location near requested coordinates",
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepresentationLocation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Nearest POI, address or stop to requested coordinates; Representation contains payload of type Location",
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepresentationLocation"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "App": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "listLogoImage": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "listLogoImages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResolutionAndFile"
                        }
                    },
                    "links": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/AppLink"
                        }
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "description": "Available apps for this location"
            },
            "AppLink": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "ppackage": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "fallback": {
                        "type": "string",
                        "writeOnly": true
                    }
                }
            },
            "ExtraInfo": {
                "type": "object",
                "properties": {
                    "text": {
                        "type": "string"
                    }
                },
                "description": "Optional, extra information for this specific location"
            },
            "GeoLocation": {
                "type": "object",
                "properties": {
                    "lat": {
                        "type": "number",
                        "format": "double"
                    },
                    "lon": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "description": "used internally by the places API, please use top level lat, lng"
            },
            "Link": {
                "required": [
                    "uri"
                ],
                "type": "object",
                "properties": {
                    "uri": {
                        "type": "string"
                    }
                },
                "description": "Image which can be used as header image. This is usually a larger full color/resolution image."
            },
            "Location": {
                "type": "object",
                "properties": {
                    "placeId": {
                        "type": "string",
                        "description": "Unique identifier of the location",
                        "example": "ChIJ2QUls2lrxkcRI4_mKWufkOM"
                    },
                    "distance": {
                        "type": "number",
                        "description": "Distance to requested coordination (lat, lng)",
                        "format": "double",
                        "example": 3.1470404590777
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the location",
                        "example": "Sumo, Mauritsweg, Rotterdam"
                    },
                    "stationCode": {
                        "type": "string",
                        "description": "To which station this location belongs, optional",
                        "example": "UT"
                    },
                    "lat": {
                        "type": "number",
                        "description": "Latitude",
                        "format": "double",
                        "example": 52.2249141
                    },
                    "lng": {
                        "type": "number",
                        "description": "longitude",
                        "format": "double",
                        "example": 5.1776998
                    },
                    "radius": {
                        "type": "number",
                        "description": "Radius",
                        "format": "double"
                    },
                    "destinationPage": {
                        "type": "boolean",
                        "description": "Contains a destination page"
                    },
                    "location": {
                        "$ref": "#/components/schemas/GeoLocation"
                    },
                    "open": {
                        "enum": [
                            "Yes",
                            "No",
                            "Unknown"
                        ],
                        "type": "string",
                        "description": "Whether the location is open"
                    },
                    "link": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "thumbnail": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "infoUrl": {
                        "type": "string",
                        "description": "Link to an external page with info about this location"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "openingHours": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OpeningHour"
                        },
                        "description": "Opening hours for the week"
                    },
                    "extra": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "Extra untyped information, e.g. amount of OV-fiets available"
                        },
                        "description": "Extra untyped information, e.g. amount of OV-fiets available"
                    },
                    "infoImages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RichImage"
                        },
                        "description": "Information images"
                    },
                    "apps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/App"
                        },
                        "description": "Available apps for this location"
                    },
                    "sites": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Site"
                        },
                        "description": "Available sites for this location"
                    },
                    "extraInfo": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExtraInfo"
                        },
                        "description": "Optional, extra information for this specific location"
                    },
                    "incompleteRemarks": {
                        "type": "string",
                        "description": "Incomplete remarks"
                    },
                    "nearbyMeLocationId": {
                        "$ref": "#/components/schemas/NearbyMeLocationId"
                    },
                    "elasticSearchGeolocationToNull": {
                        "$ref": "#/components/schemas/Location"
                    }
                },
                "description": "Represents a single location with usually a lat, lng. A place can have multiple locations."
            },
            "NearbyMeLocationId": {
                "required": [
                    "type",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "description": "Nearbyme location id"
            },
            "OpeningHour": {
                "type": "object",
                "properties": {
                    "dayOfWeek": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "startTime": {
                        "type": "string",
                        "description": "The time when this location will open",
                        "example": "13:00"
                    },
                    "endTime": {
                        "type": "string",
                        "description": "The time when it is closed, note! when the end time is bigger then the start time, it closes the next day during the night",
                        "example": "01:00"
                    },
                    "closesNextDay": {
                        "type": "boolean"
                    }
                },
                "description": "Represents the OpeningHour of a single day"
            },
            "Place": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/Type"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name",
                        "example": "Sumo"
                    },
                    "identifiers": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "addressIndex",
                                "address",
                                "city",
                                "command",
                                "station-retail",
                                "fietsenstalling",
                                "greenwheels",
                                "image",
                                "onbekend",
                                "ovfiets",
                                "park_ride_free",
                                "park_ride_paid",
                                "poi",
                                "qpark",
                                "stationfacility",
                                "stationinfoBlacklist",
                                "stationinfoMissing",
                                "stationV2",
                                "station-taxi",
                                "status",
                                "stop",
                                "userstop",
                                "zonetaxi"
                            ],
                            "type": "string"
                        }
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the place",
                        "example": "Sumo, Mauritsweg, Rotterdam"
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "List of categories to which a place belongs",
                            "example": "shop,facility"
                        },
                        "description": "List of categories to which a place belongs",
                        "example": "shop,facility"
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Location"
                        },
                        "description": "List locations for this place"
                    },
                    "listLogoImage": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "primaryColor": {
                        "type": "string",
                        "description": "The primary color for this place, value is in hex #ffffff",
                        "example": "#f1f2f3"
                    },
                    "secondaryColor": {
                        "type": "string",
                        "description": "The secondary color for this place, value is in hex #ffffff",
                        "example": "#f1f2f3"
                    },
                    "backgroundColor": {
                        "type": "string",
                        "description": "The background color for this place, value is in hex #ffffff",
                        "example": "#f1f2f3"
                    },
                    "open": {
                        "enum": [
                            "Yes",
                            "No",
                            "Unknown"
                        ],
                        "type": "string",
                        "description": "Whether one of the locations is open, this is an aggregate of all Locations"
                    },
                    "openingHours": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OpeningHour"
                        },
                        "description": "Opening hours for the week"
                    },
                    "keywords": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "List of keywords",
                            "example": "Koffie,Winkel"
                        },
                        "description": "List of keywords",
                        "example": "Koffie,Winkel"
                    },
                    "stationBound": {
                        "type": "boolean",
                        "description": "is this place part of a station"
                    },
                    "headerImage": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "advertImages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RichImage"
                        },
                        "description": "Links to advert images"
                    },
                    "infoImages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RichImage"
                        },
                        "description": "Links to info images"
                    },
                    "incompleteRemarks": {
                        "type": "string",
                        "writeOnly": true
                    }
                }
            },
            "RepresentationListPlace": {
                "type": "object",
                "properties": {
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "links": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/Link"
                        }
                    },
                    "payload": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Place"
                        }
                    },
                    "meta": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        }
                    }
                },
                "description": "A Representation containing an optional link to self, the payload, optional links and optional meta data."
            },
            "Resolution": {
                "required": [
                    "identifiers"
                ],
                "type": "object",
                "properties": {
                    "identifiers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "ResolutionAndFile": {
                "required": [
                    "deleted",
                    "file",
                    "originalFilename",
                    "referenceCounter",
                    "resolution"
                ],
                "type": "object",
                "properties": {
                    "resolution": {
                        "$ref": "#/components/schemas/Resolution"
                    },
                    "file": {
                        "type": "string",
                        "format": "binary"
                    },
                    "originalFilename": {
                        "type": "string"
                    },
                    "referenceCounter": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "deleted": {
                        "type": "boolean"
                    }
                }
            },
            "RichImage": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the image"
                    },
                    "link": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "qualifier": {
                        "enum": [
                            "landscape,portrait,square"
                        ],
                        "type": "string",
                        "description": "The type of image",
                        "example": "landscape"
                    },
                    "title": {
                        "enum": [
                            "landscape,portrait,square"
                        ],
                        "type": "string",
                        "description": "The title",
                        "example": "landscape"
                    },
                    "subtitle": {
                        "type": "string",
                        "description": "The subtitle which usually is below the title"
                    },
                    "body": {
                        "type": "string",
                        "description": "Body text"
                    },
                    "buttonText": {
                        "type": "string",
                        "description": "Text to be placed on a call to action button"
                    },
                    "buttonLink": {
                        "type": "string",
                        "description": "Link that should be opened when a user presses the call to action button"
                    },
                    "language": {
                        "type": "string",
                        "description": "Which language this image is in"
                    }
                },
                "description": "Links to info images"
            },
            "Site": {
                "type": "object",
                "properties": {
                    "qualifier": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    }
                },
                "description": "Available sites for this location"
            },
            "Type": {
                "enum": [
                    "POI",
                    "STATION_TAXI",
                    "SGO",
                    "DEPRECATED_STATION_RETAIL",
                    "GREENWHEELS",
                    "QPARK",
                    "COMMAND",
                    "STATUS",
                    "ADDRESS_INDEX",
                    "ADDRESS_SEARCH",
                    "CITY",
                    "STOPPLACE",
                    "USERSTOP",
                    "IMAGE",
                    "STATION",
                    "ONBEKEND"
                ],
                "type": "string",
                "description": "Type",
                "example": "poi"
            },
            "RepresentationLocation": {
                "type": "object",
                "properties": {
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "links": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/Link"
                        }
                    },
                    "payload": {
                        "$ref": "#/components/schemas/Location"
                    },
                    "meta": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        }
                    }
                },
                "description": "A Representation containing an optional link to self, the payload, optional links and optional meta data."
            },
            "Description": {
                "required": [
                    "full",
                    "minimal"
                ],
                "type": "object",
                "properties": {
                    "full": {
                        "type": "string"
                    },
                    "minimal": {
                        "type": "string"
                    }
                }
            },
            "NearbyMeLocation": {
                "required": [
                    "category",
                    "id",
                    "lat",
                    "lng",
                    "name",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/NearbyMeLocationId"
                    },
                    "lat": {
                        "type": "number",
                        "format": "double"
                    },
                    "lng": {
                        "type": "number",
                        "format": "double"
                    },
                    "name": {
                        "type": "string"
                    },
                    "category": {
                        "enum": [
                            "STATION",
                            "USER_STOP",
                            "OV_FIETS",
                            "PARK_AND_RIDE",
                            "SHARED_MODALITY",
                            "UNKNOWN"
                        ],
                        "type": "string"
                    },
                    "provider": {
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "STATION",
                            "BUS",
                            "MIXED_BUS_TRAM",
                            "MIXED_OTHER",
                            "METRO",
                            "TRAM",
                            "OV_FIETS",
                            "SHARED_BIKE",
                            "SHARED_ELECTRICAL_BIKE",
                            "SHARED_SCOOTER",
                            "SCOOTER",
                            "SHARED_CAR",
                            "PARK_AND_RIDE",
                            "FERRY",
                            "UNKNOWN"
                        ],
                        "type": "string"
                    },
                    "distance": {
                        "type": "number",
                        "format": "double"
                    },
                    "description": {
                        "$ref": "#/components/schemas/Description"
                    },
                    "routeShortNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "platform": {
                        "$ref": "#/components/schemas/Platform"
                    }
                }
            },
            "NearbyMeLocationResponse": {
                "required": [
                    "locations",
                    "messages"
                ],
                "type": "object",
                "properties": {
                    "locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NearbyMeLocation"
                        }
                    },
                    "messages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NearbyMeMessage"
                        }
                    }
                }
            },
            "NearbyMeMessage": {
                "required": [
                    "priority",
                    "type",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "priority": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "value": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                }
            },
            "Platform": {
                "required": [
                    "code",
                    "label"
                ],
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "label": {
                        "type": "string"
                    }
                }
            },
            "SharedModality": {
                "required": [
                    "bookingInfo",
                    "button",
                    "id",
                    "name",
                    "priceDetails",
                    "providerImageUrl",
                    "providerLogoUrl",
                    "specifications"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "providerName": {
                        "type": "string"
                    },
                    "providerImageUrl": {
                        "type": "string"
                    },
                    "providerLogoUrl": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "batteryInfo": {
                        "$ref": "#/components/schemas/SharedModalityBatteryInfo"
                    },
                    "priceDetails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "specifications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SharedModalitySpecification"
                        }
                    },
                    "button": {
                        "$ref": "#/components/schemas/SharedModalityButton"
                    },
                    "storeUrls": {
                        "$ref": "#/components/schemas/SharedModalityStoreUrls"
                    },
                    "bookingInfo": {
                        "$ref": "#/components/schemas/SharedModalityBookingInfo"
                    }
                }
            },
            "SharedModalityBatteryInfo": {
                "required": [
                    "iconId",
                    "level",
                    "text"
                ],
                "type": "object",
                "properties": {
                    "text": {
                        "type": "string"
                    },
                    "level": {
                        "enum": [
                            "EMPTY",
                            "ALMOST_EMPTY",
                            "LESS_THAN_HALF",
                            "MORE_THAN_HALF",
                            "ALMOST_FULL",
                            "UNKNOWN"
                        ],
                        "type": "string"
                    },
                    "iconId": {
                        "type": "string"
                    },
                    "iconColor": {
                        "type": "string"
                    },
                    "percentage": {
                        "type": "string"
                    },
                    "distanceLeftInKilometers": {
                        "type": "string"
                    }
                }
            },
            "SharedModalityBookingInfo": {
                "required": [
                    "modalityId",
                    "provider"
                ],
                "type": "object",
                "properties": {
                    "bookingContext": {
                        "type": "string"
                    },
                    "provider": {
                        "type": "string"
                    },
                    "modalityId": {
                        "type": "string"
                    }
                }
            },
            "SharedModalityButton": {
                "required": [
                    "buttonText",
                    "variant",
                    "weblink"
                ],
                "type": "object",
                "properties": {
                    "buttonText": {
                        "type": "string"
                    },
                    "weblink": {
                        "type": "string"
                    },
                    "deeplink": {
                        "type": "string"
                    },
                    "deeplinkIOS": {
                        "type": "string"
                    },
                    "deeplinkAndroid": {
                        "type": "string"
                    },
                    "deeplinkWeb": {
                        "type": "string"
                    },
                    "variant": {
                        "type": "string"
                    },
                    "iconLeading": {
                        "type": "string"
                    }
                }
            },
            "SharedModalitySpecification": {
                "required": [
                    "color",
                    "description",
                    "icon"
                ],
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "icon": {
                        "type": "string"
                    },
                    "color": {
                        "type": "string"
                    }
                }
            },
            "SharedModalityStoreUrls": {
                "required": [
                    "appleStoreUrl",
                    "googlePlayStoreUrl"
                ],
                "type": "object",
                "properties": {
                    "googlePlayStoreUrl": {
                        "type": "string"
                    },
                    "appleStoreUrl": {
                        "type": "string"
                    }
                }
            },
            "BatteryInfo": {
                "required": [
                    "iconId",
                    "level",
                    "text"
                ],
                "type": "object",
                "properties": {
                    "text": {
                        "type": "string"
                    },
                    "level": {
                        "enum": [
                            "EMPTY",
                            "ALMOST_EMPTY",
                            "LESS_THAN_HALF",
                            "MORE_THAN_HALF",
                            "ALMOST_FULL",
                            "UNKNOWN"
                        ],
                        "type": "string"
                    },
                    "iconId": {
                        "type": "string"
                    }
                }
            },
            "Button": {
                "required": [
                    "buttonText",
                    "weblink"
                ],
                "type": "object",
                "properties": {
                    "weblink": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "deepLink": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "buttonText": {
                        "type": "string"
                    }
                }
            },
            "Scooter": {
                "required": [
                    "address",
                    "batteryInfo",
                    "button",
                    "distance",
                    "id",
                    "lat",
                    "lng",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "lat": {
                        "type": "number",
                        "format": "double"
                    },
                    "lng": {
                        "type": "number",
                        "format": "double"
                    },
                    "thumbnail": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "distance": {
                        "type": "number",
                        "format": "double"
                    },
                    "address": {
                        "type": "string"
                    },
                    "batteryInfo": {
                        "$ref": "#/components/schemas/BatteryInfo"
                    },
                    "button": {
                        "$ref": "#/components/schemas/Button"
                    }
                }
            },
            "NearbyMeLocationV1": {
                "required": [
                    "id",
                    "lat",
                    "lng",
                    "name",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/NearbyMeLocationId"
                    },
                    "lat": {
                        "type": "number",
                        "format": "double"
                    },
                    "lng": {
                        "type": "number",
                        "format": "double"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "shortDescription": {
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "STATION",
                            "BUS",
                            "MIXED_BUS_TRAM",
                            "MIXED_OTHER",
                            "METRO",
                            "TRAM",
                            "OV_FIETS",
                            "SHARED_BIKE",
                            "SHARED_ELECTRICAL_BIKE",
                            "SHARED_SCOOTER",
                            "SCOOTER",
                            "SHARED_CAR",
                            "PARK_AND_RIDE",
                            "FERRY",
                            "UNKNOWN"
                        ],
                        "type": "string"
                    },
                    "mixedType": {
                        "enum": [
                            "MIXED_BUS_TRAM",
                            "MIXED_OTHER"
                        ],
                        "type": "string"
                    },
                    "distance": {
                        "type": "number",
                        "format": "double"
                    },
                    "numAvailable": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "address": {
                        "type": "string"
                    },
                    "routeShortNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "platform": {
                        "$ref": "#/components/schemas/Platform"
                    }
                }
            },
            "NearbyMeFilter": {
                "required": [
                    "filterName",
                    "filterType",
                    "id",
                    "name",
                    "providers"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string"
                    },
                    "filterName": {
                        "type": "string"
                    },
                    "filterType": {
                        "type": "string"
                    },
                    "providers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Provider"
                        }
                    }
                }
            },
            "Provider": {
                "required": [
                    "filterName",
                    "id",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string"
                    },
                    "filterName": {
                        "type": "string"
                    }
                }
            },
            "SharedModalityV1": {
                "required": [
                    "bookingContext",
                    "bookingInfo",
                    "button",
                    "id",
                    "name",
                    "priceDetails",
                    "provider",
                    "providerImageUrl",
                    "providerLogoUrl",
                    "specifications",
                    "type",
                    "variation"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "STATION",
                            "BUS",
                            "MIXED_BUS_TRAM",
                            "MIXED_OTHER",
                            "METRO",
                            "TRAM",
                            "OV_FIETS",
                            "SHARED_BIKE",
                            "SHARED_ELECTRICAL_BIKE",
                            "SHARED_SCOOTER",
                            "SCOOTER",
                            "SHARED_CAR",
                            "PARK_AND_RIDE",
                            "FERRY",
                            "UNKNOWN"
                        ],
                        "type": "string"
                    },
                    "variation": {
                        "enum": [
                            "REGULAR",
                            "ELECTRIC",
                            "HYBRID",
                            "GASOLINE",
                            "UNKNOWN"
                        ],
                        "type": "string"
                    },
                    "provider": {
                        "enum": [
                            "CHECK",
                            "TIER",
                            "OV_FIETS",
                            "DEELFIETS",
                            "GREENWHEELS",
                            "MYWHEELS"
                        ],
                        "type": "string"
                    },
                    "providerName": {
                        "type": "string"
                    },
                    "providerImageUrl": {
                        "type": "string"
                    },
                    "providerLogoUrl": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "batteryInfo": {
                        "$ref": "#/components/schemas/SharedModalityBatteryInfo"
                    },
                    "priceDetails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "specifications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SharedModalitySpecification"
                        }
                    },
                    "button": {
                        "$ref": "#/components/schemas/SharedModalityButton"
                    },
                    "storeUrls": {
                        "$ref": "#/components/schemas/SharedModalityStoreUrls"
                    },
                    "bookingInfo": {
                        "$ref": "#/components/schemas/SharedModalityBookingInfo"
                    },
                    "bookingContext": {
                        "type": "string"
                    }
                }
            }
        },
        "securitySchemes": {
            "apiKeyHeader": {
                "type": "apiKey",
                "name": "Ocp-Apim-Subscription-Key",
                "in": "header"
            },
            "apiKeyQuery": {
                "type": "apiKey",
                "name": "subscription-key",
                "in": "query"
            }
        }
    },
    "security": [
        {
            "apiKeyHeader": []
        },
        {
            "apiKeyQuery": []
        }
    ],
    "tags": [
        {
            "name": "Autosuggest"
        },
        {
            "name": "OV-fiets"
        },
        {
            "name": "Places"
        },
        {
            "name": "Scooter"
        },
        {
            "name": "NearbyMe"
        },
        {
            "name": "modality-details"
        }
    ]
}